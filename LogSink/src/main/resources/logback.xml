<!--configuration -->
<configuration scan="true" scanPeriod="120 seconds" debug="false">

	<!-- make use of the jul-to-slf4j bridge -->
	<contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
		<resetJUL>false</resetJUL>
	</contextListener>

	<!-- potential log file target dirs might be ${java.io.tmpdir} or ${user.home} -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>./logs/LogSink.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily -->
			<fileNamePattern>./logs/LogSink.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- or whenever the file size reaches 100MB -->
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>

		<encoder>
			<pattern>%date %level [%thread] %logger{36} [%file:%line] %msg%n</pattern>
		</encoder>
	</appender>
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder 
			by default -->
		<encoder>
			<!--pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern -->
			<!--pattern>%d{HH:mm:ss.SSS} %-5level %logger{10} - %msg%n</pattern -->
			<pattern>%d{HH:mm:ss} %msg%n</pattern>
		</encoder>
	</appender>


	<!-- TRACE < DEBUG < INFO < WARN < ERROR - ALL,OFF,NULL(=INHERITED) -->
	<!--  configure root -->
	<root level="WARN">
		<appender-ref ref="FILE" />
		<appender-ref ref="STDOUT" />
	</root>
	<!--  configure special settings for own packages -->
	<logger name="de.fraunhofer.iosb" level="DEBUG" />
	<!-- Thirdparty Configuration, i.e. various common base packages -->
	
	
</configuration>