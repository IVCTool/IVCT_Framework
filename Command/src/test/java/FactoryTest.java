import static org.junit.Assert.assertTrue;

import java.io.IOException;

import org.junit.Test;

import nato.ivct.commander.CmdListSuT;
import nato.ivct.commander.CmdStartTestResultListener.OnResultListener;
import nato.ivct.commander.CmdStartTestResultListener.TcResult;
import nato.ivct.commander.Factory;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'hzg' at '07.04.17 10:59' with Gradle 2.9
 *
 * @author hzg, @date 07.04.17 10:59
 */
public class FactoryTest {
	@Test
	public void testCreateCmdListBadgesMethod() {
		assertTrue("Factory Test createCmdListBadges should return CmdListBadges",
				Factory.createCmdListBadges() != null);
	}

	@Test
	public void testCreateCmdListSutMethod() {
		assertTrue("Factory Test createCmdListSut should return CmdListSut", Factory.createCmdListSut() != null);
	}

	@Test
	public void testCreateCmdQuitMethod() {
		assertTrue("Factory Test createCmdQuit should return CmdQuit", Factory.createCmdQuit() != null);
	}

	@Test
	public void testCreateCmdSetLogLevelMethod() {
		assertTrue("Factory Test createCmdSetLogLevel should return CmdSetLogLevel",
				Factory.createCmdSetLogLevel("debug") != null);
	}

	@Test
	public void testCreateCmdStartTcMethod() {
		assertTrue("Factory Test createCmdStartTc should return CmdStartTc",
				Factory.createCmdStartTc("hw_iosb", "TS_HelloWorld", "some.test.case", "c:/tmp") != null);
	}

	@Test
	public void testCreateCmdStartTestResultListenerMethod() {
		Factory classUnderTest;
		class OnResultListenerTest implements OnResultListener {

			@Override
			public void onResult(TcResult result) {
				// TODO Auto-generated method stub

			}

		}
		OnResultListener testListener = new OnResultListenerTest();
		assertTrue("Factory Test createCmdStartTestResultListener should return CmdStartTestResultListener",
				Factory.createCmdStartTestResultListener(testListener) != null);
	}

	@Test
	public void testHelloWorldFederate() {
		CmdListSuT cmd = Factory.createCmdListSut();
		cmd.execute();
		assertTrue("should have a list of SuTs", cmd.sutMap != null);
		assertTrue("hw_iosb should exist", cmd.sutMap.containsKey("hw_iosb"));
	}
}
