package nato.ivct.gui.shared.sut;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "nato.ivct.gui.client.sut.SuTTcExecutionForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class SuTTcExecutionFormData extends AbstractFormData {

	private static final long serialVersionUID = 1L;

	public String getBadgeId() {
		return getBadgeIdProperty().getValue();
	}

	public void setBadgeId(String badgeId) {
		getBadgeIdProperty().setValue(badgeId);
	}

	public BadgeIdProperty getBadgeIdProperty() {
		return getPropertyByClass(BadgeIdProperty.class);
	}

	public ReqDescr getReqDescr() {
		return getFieldByClass(ReqDescr.class);
	}

	public String getRequirementId() {
		return getRequirementIdProperty().getValue();
	}

	public void setRequirementId(String requirementId) {
		getRequirementIdProperty().setValue(requirementId);
	}

	public RequirementIdProperty getRequirementIdProperty() {
		return getPropertyByClass(RequirementIdProperty.class);
	}

	public String getSutId() {
		return getSutIdProperty().getValue();
	}

	public void setSutId(String sutId) {
		getSutIdProperty().setValue(sutId);
	}

	public SutIdProperty getSutIdProperty() {
		return getPropertyByClass(SutIdProperty.class);
	}

	public TcExecutionLog getTcExecutionLog() {
		return getFieldByClass(TcExecutionLog.class);
	}

	public TestCaseExecutionStatusTable getTestCaseExecutionStatusTable() {
		return getFieldByClass(TestCaseExecutionStatusTable.class);
	}

	public String getTestCaseId() {
		return getTestCaseIdProperty().getValue();
	}

	public void setTestCaseId(String testCaseId) {
		getTestCaseIdProperty().setValue(testCaseId);
	}

	public TestCaseIdProperty getTestCaseIdProperty() {
		return getPropertyByClass(TestCaseIdProperty.class);
	}

	public TestCaseName getTestCaseName() {
		return getFieldByClass(TestCaseName.class);
	}

	public String getTestCaseProgress() {
		return getTestCaseProgressProperty().getValue();
	}

	public void setTestCaseProgress(String testCaseProgress) {
		getTestCaseProgressProperty().setValue(testCaseProgress);
	}

	public TestCaseProgressProperty getTestCaseProgressProperty() {
		return getPropertyByClass(TestCaseProgressProperty.class);
	}

	public String getTestCaseStatus() {
		return getTestCaseStatusProperty().getValue();
	}

	public void setTestCaseStatus(String testCaseStatus) {
		getTestCaseStatusProperty().setValue(testCaseStatus);
	}

	public TestCaseStatusProperty getTestCaseStatusProperty() {
		return getPropertyByClass(TestCaseStatusProperty.class);
	}

	public String getTestCaseVerdict() {
		return getTestCaseVerdictProperty().getValue();
	}

	public void setTestCaseVerdict(String testCaseVerdict) {
		getTestCaseVerdictProperty().setValue(testCaseVerdict);
	}

	public TestCaseVerdictProperty getTestCaseVerdictProperty() {
		return getPropertyByClass(TestCaseVerdictProperty.class);
	}

	public static class BadgeIdProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class ReqDescr extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class RequirementIdProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class SutIdProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class TcExecutionLog extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class TestCaseExecutionStatusTable extends AbstractTableFieldBeanData {

		private static final long serialVersionUID = 1L;

		@Override
		public TestCaseExecutionStatusTableRowData addRow() {
			return (TestCaseExecutionStatusTableRowData) super.addRow();
		}

		@Override
		public TestCaseExecutionStatusTableRowData addRow(int rowState) {
			return (TestCaseExecutionStatusTableRowData) super.addRow(rowState);
		}

		@Override
		public TestCaseExecutionStatusTableRowData createRow() {
			return new TestCaseExecutionStatusTableRowData();
		}

		@Override
		public Class<? extends AbstractTableRowData> getRowType() {
			return TestCaseExecutionStatusTableRowData.class;
		}

		@Override
		public TestCaseExecutionStatusTableRowData[] getRows() {
			return (TestCaseExecutionStatusTableRowData[]) super.getRows();
		}

		@Override
		public TestCaseExecutionStatusTableRowData rowAt(int index) {
			return (TestCaseExecutionStatusTableRowData) super.rowAt(index);
		}

		public void setRows(TestCaseExecutionStatusTableRowData[] rows) {
			super.setRows(rows);
		}

		public static class TestCaseExecutionStatusTableRowData extends AbstractTableRowData {

			private static final long serialVersionUID = 1L;
			public static final String tcStatus = "tcStatus";
			public static final String progress = "progress";
			private String m_tcStatus;
			private Integer m_progress;

			public String getTcStatus() {
				return m_tcStatus;
			}

			public void setTcStatus(String newTcStatus) {
				m_tcStatus = newTcStatus;
			}

			public Integer getProgress() {
				return m_progress;
			}

			public void setProgress(Integer newProgress) {
				m_progress = newProgress;
			}
		}
	}

	public static class TestCaseIdProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class TestCaseName extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class TestCaseProgressProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class TestCaseStatusProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class TestCaseVerdictProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}
}
