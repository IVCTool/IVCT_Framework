package nato.ivct.gui.shared.sut;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;


/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "nato.ivct.gui.client.sut.SuTEditForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class SuTFormData extends AbstractFormData {

    private static final long serialVersionUID = 1L;


    public Descr getDescr() {
        return getFieldByClass(Descr.class);
    }


    public Name getName() {
        return getFieldByClass(Name.class);
    }


    public SutCapabilityTable getSutCapabilityTable() {
        return getFieldByClass(SutCapabilityTable.class);
    }


    /**
     * access method for property SutId.
     */
    public String getSutId() {
        return getSutIdProperty().getValue();
    }


    /**
     * access method for property SutId.
     */
    public void setSutId(String sutId) {
        getSutIdProperty().setValue(sutId);
    }


    public SutIdProperty getSutIdProperty() {
        return getPropertyByClass(SutIdProperty.class);
    }


    public SutVendor getSutVendor() {
        return getFieldByClass(SutVendor.class);
    }

    public static class Descr extends AbstractValueFieldData<String> {

        private static final long serialVersionUID = 1L;
    }

    public static class Name extends AbstractValueFieldData<String> {

        private static final long serialVersionUID = 1L;
    }

    public static class SutCapabilityTable extends AbstractTableFieldBeanData {

        private static final long serialVersionUID = 1L;


        @Override
        public SutCapabilityTableRowData addRow() {
            return (SutCapabilityTableRowData) super.addRow();
        }


        @Override
        public SutCapabilityTableRowData addRow(int rowState) {
            return (SutCapabilityTableRowData) super.addRow(rowState);
        }


        @Override
        public SutCapabilityTableRowData createRow() {
            return new SutCapabilityTableRowData();
        }


        @Override
        public Class<? extends AbstractTableRowData> getRowType() {
            return SutCapabilityTableRowData.class;
        }


        @Override
        public SutCapabilityTableRowData[] getRows() {
            return (SutCapabilityTableRowData[]) super.getRows();
        }


        @Override
        public SutCapabilityTableRowData rowAt(int index) {
            return (SutCapabilityTableRowData) super.rowAt(index);
        }


        public void setRows(SutCapabilityTableRowData[] rows) {
            super.setRows(rows);
        }

        public static class SutCapabilityTableRowData extends AbstractTableRowData {

            private static final long  serialVersionUID = 1L;
            public static final String cbBadgeID        = "cbBadgeID";
            public static final String cbBadgeStatus    = "cbBadgeStatus";
            private String             m_cbBadgeID;
            private String             m_cbBadgeStatus;


            public String getCbBadgeID() {
                return m_cbBadgeID;
            }


            public void setCbBadgeID(String newCbBadgeID) {
                m_cbBadgeID = newCbBadgeID;
            }


            public String getCbBadgeStatus() {
                return m_cbBadgeStatus;
            }


            public void setCbBadgeStatus(String newCbBadgeStatus) {
                m_cbBadgeStatus = newCbBadgeStatus;
            }
        }
    }

    public static class SutIdProperty extends AbstractPropertyData<String> {

        private static final long serialVersionUID = 1L;
    }

    public static class SutVendor extends AbstractValueFieldData<String> {

        private static final long serialVersionUID = 1L;
    }
}
