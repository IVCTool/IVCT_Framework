plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

artifacts {
    archives javadocJar, sourcesJar
}

signing
{
    sign configurations.archives
}

group = 'io.github.msg134'
archivesBaseName = "TC.lib"
version = ivctVersion

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                // authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                // authentication(userName: ossrhUsername, password: ossrhPassword)
                // proxy(host: "proxy-ka.iosb.fraunhofer.de", port: 80, type: 'https')
            }
            pom.project {
                name = "IVCT Test Case Library"
                description = "Library to be used by IVCT test case developers"
                url = "https://github.com/MSG134/IVCT_Framework/tree/master/TC.lib"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "rhzg"
                        name = "Reinhard Herzog"
                        email = "reinhard.herzog@iosb.fraunhofer.de"
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/MSG134/IVCT_Framework/tree/development/TC.lib.git"
                    developerConnection = "scm:git:https://github.com/MSG134/IVCT_Framework/tree/development/TC.lib-git"
                    url = "https://github.com/MSG134/IVCT_Framework/tree/development/TC.lib"
                }
            }
        }
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    // Do not sign archives by default (a local build without gpg keyring should succeed)
    if (taskGraph.allTasks.any {  it.name == 'install' || it.name == 'build' || it.name == 'assemble' }) {
        tasks.findAll { it.name == 'signArchives' || it.name == 'signDocsJar' || it.name == 'signTestJar' || it.name == 'signSourcesJar' }.each { task ->
            task.enabled = false
        }
    }
}

// publishing {
//     publications {
//         mavenJava(MavenPublication) {
//             groupId = 'io.github.msg134'
//             artifactId = 'TC.lib'
//             archivesBaseName = "TC.lib"
//             version = ivctVersion
//
//             from components.java
//         }
//     }
// }


dependencies {
    compileOnly project(':Command')
    compileOnly project(':IEEE1516e')

	compileOnly libraries.slf4j_api
	compileOnly libraries.jsonSimple

	runtime		libraries.logback_classic
	runtime		libraries.logback_core

	runtime     libraries.slf4j_jcl_over_slf4j
	runtime     libraries.slf4j_jul_to_slf4j
	runtime     libraries.slf4j_log4j_over_slf4j

//	compileOnly     group: 'io.github.msg134', name: 'IEEE1516e', version: ivctVersion
}
