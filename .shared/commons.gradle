/*
 * Common configuration used by all IVCT subprojects.
 */

// -----------------------------------------------------------------------------
// allprojects
// -----------------------------------------------------------------------------

allprojects {
	//http://www.gradle.org/docs/nightly/userguide/dependency_management.html#sub:dynamic_versions_and_changing_modules
	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}

    repositories {
		mavenLocal()
		mavenCentral()
		maven {
			url 'https://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts/'
		}
		maven {
            // required if snapshots libraries shall be tested
            url 'https://oss.sonatype.org/content/repositories/snapshots'
		}
	}

    ext {
        // may be feed from bamboo, see also https://confluence.atlassian.com/display/BAMBOO/Using+global,+plan+or+build-specific+variables
        // -Dbuild=${bamboo.build} -DbuildTimestamp=${bamboo.buildTimeStamp} -DbuildKey=${bamboo.buildKey} -DbuildNumber=${bamboo.buildNumber} -DrepositoryBranchName=${bamboo.repository.branch.name} -DrevisionNumber=${bamboo.custom.svn.revision.number}
        buildTimestmap = System.getProperty("buildTimestamp", java.util.Calendar.getInstance().getTime().toString())
        // build = System.getProperty("build", "SNAPSHOT")
        buildKey = System.getProperty("buildKey", "UNKNOWN")
        buildNumber = System.getProperty("buildNumber", "SNAPSHOT")
        repositoryBranchName = System.getProperty("repositoryBranchName", "UNKNOWN")
        revisionNumber = System.getProperty("revisionNumber", "SNAPSHOT")
    }
}


// -----------------------------------------------------------------------------
// subprojects
// -----------------------------------------------------------------------------

subprojects { subProject ->
    defaultTasks 'build'

    group = subProject.parent.group
    if (subProject.version == 'unspecified') {
        version = subProject.parent.version
    }
    description = subProject.parent.description
    ext {
        specificationVersion = version
    }

    if ( !subProject.name.startsWith( 'RuntimeConfig' )  && !subProject.name.startsWith( 'docs' ) ) {
        println "apply java to " + subProject.name
        apply plugin: 'java'
        compileJava {
            options.compilerArgs << '-Xlint:unchecked'
			//options.warnings = true	// defaults to true
			options.warnings = false

            options.encoding = 'UTF-8'

            //options.bootClasspath = bootClasspath
            options.debug(debugLevel : 'lines,vars,source')
            options.deprecation = true
        }

        java {
            sourceCompatibility = "1.8"
            targetCompatibility = "1.8"
        }

		javadoc {
			options.encoding = "UTF-8"
			options.tags = [ "noinspection" ]
		}
    }
}


