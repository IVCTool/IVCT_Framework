apply plugin: 'application'

mainClassName = 'de.fraunhofer.iosb.ivct.CmdLineTool'

dependencies {
	compile     project(':Command')
	compile     libraries.slf4j_api
	compile     libraries.jsonSimple


	runtime		libraries.actimemqClient
	runtime		libraries.logback_classic
	runtime		libraries.logback_core

	testImplementation	libraries.junit
	testImplementation	libraries.hamcrest_core
	testImplementation	libraries.activemqEmbedded
}

distributions {
    main {
        contents {
            from('src/conf/CmdLineTool_logback.xml') {
                into 'lib'
            }
        }
    }
}

sourceSets {
  test {
    resources {
      srcDir "src/conf"
    }
  }
}

test {
classpath = sourceSets.test.runtimeClasspath + files('src/conf')
}

tasks.withType(CreateStartScripts) {
    classpath += files('lib')
doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\lib', '%APP_HOME%\\lib')
        unixScriptFile.text = unixScriptFile.text.replace('$APP_HOME/lib/lib', '$APP_HOME/lib')
    }
}
